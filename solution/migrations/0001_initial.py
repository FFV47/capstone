# Generated by Django 4.2.5 on 2023-10-01 21:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import solution.utils
import solution.validators
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="last name"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="email address"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("has_personal_account", models.BooleanField(default=False)),
                ("has_business_account", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="DaysSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True)),
                ("description", models.TextField()),
                ("location", models.CharField(max_length=255)),
                ("types", models.JSONField(validators=[solution.validators.validate_job_types])),
                ("shifts", models.JSONField(validators=[solution.validators.validate_shifts])),
                ("responsibilities", models.JSONField(default=list)),
                ("qualifications", models.JSONField(default=list)),
                ("benefits", models.JSONField(default=list)),
                (
                    "min_salary",
                    models.FloatField(validators=[django.core.validators.MinValueValidator(0)]),
                ),
                (
                    "max_salary",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100000),
                        ]
                    ),
                ),
                ("period_salary", models.CharField(max_length=255)),
                ("application_instructions", models.TextField()),
                ("tags", models.JSONField(validators=[solution.validators.validate_tags])),
                ("posted_date", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Profession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Shift",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmployerAccount",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="business_account",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        upload_to=solution.utils.business_logo_path,
                        validators=[
                            solution.validators.FileValidator(
                                content_types=("image/jpeg", "image/png"), max_size=3
                            )
                        ],
                    ),
                ),
                ("company_name", models.CharField(max_length=50)),
                ("address", models.CharField(max_length=255)),
                ("legal_name", models.CharField(max_length=100)),
                ("industry", models.CharField(max_length=50)),
                (
                    "company_size",
                    models.IntegerField(
                        choices=[
                            (0, "Fewer than 10 employees"),
                            (1, "10 to 50 employees"),
                            (2, "50 to 250 employees"),
                            (3, "250 to 500 employees"),
                            (4, "More than 500 employees"),
                        ]
                    ),
                ),
                ("location", models.CharField(max_length=50)),
                ("company_url", models.URLField(blank=True)),
                ("description", models.TextField(blank=True)),
                (
                    "personal_photo",
                    models.ImageField(
                        blank=True,
                        upload_to=solution.utils.business_photo_path,
                        validators=[
                            solution.validators.FileValidator(
                                content_types=("image/jpeg", "image/png"), max_size=3
                            )
                        ],
                    ),
                ),
                ("role", models.CharField(max_length=50)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                (
                    "phone",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator("^(\\d{1,3})(\\d{2})(\\d{9})$")
                        ],
                    ),
                ),
                ("verified_id", models.BooleanField(default=False)),
                ("last_update", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkerAccount",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="personal_account",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        upload_to=solution.utils.personal_account_path,
                        validators=[
                            solution.validators.FileValidator(
                                content_types=("image/jpeg", "image/png"), max_size=3
                            )
                        ],
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        max_length=20, validators=[django.core.validators.MinLengthValidator(2)]
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        max_length=20, validators=[django.core.validators.MinLengthValidator(2)]
                    ),
                ),
                (
                    "birthdate",
                    models.DateField(validators=[solution.validators.validate_birthdate]),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator("^(\\d{1,3})(\\d{2})(\\d{9})$")
                        ],
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("location", models.CharField(max_length=50)),
                ("about", models.CharField(blank=True, max_length=255)),
                ("verified_id", models.BooleanField(default=False)),
                ("driving_license", models.BooleanField(default=False)),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "profession",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="professionals",
                        to="solution.profession",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkSchedules",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("time_from", models.TimeField()),
                ("time_to", models.TimeField()),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_schedules",
                        to="solution.job",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Work Schedules",
            },
        ),
        migrations.CreateModel(
            name="WorkerFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("text", models.TextField()),
                (
                    "job",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="worker_feedbacks",
                        to="solution.job",
                    ),
                ),
                (
                    "employer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_feedbacks",
                        to="solution.employeraccount",
                    ),
                ),
                (
                    "worker",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="job_feedbacks",
                        to="solution.workeraccount",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="job",
            name="applicants",
            field=models.ManyToManyField(related_name="applied_jobs", to="solution.workeraccount"),
        ),
        migrations.AddField(
            model_name="job",
            name="employer",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="jobs",
                to="solution.employeraccount",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="workers",
            field=models.ManyToManyField(related_name="jobs", to="solution.workeraccount"),
        ),
        migrations.CreateModel(
            name="EmployerFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("text", models.TextField()),
                (
                    "job",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="employer_feedbacks",
                        to="solution.job",
                    ),
                ),
                (
                    "employer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="worker_feedbacks",
                        to="solution.employeraccount",
                    ),
                ),
                (
                    "worker",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_feedbacks",
                        to="solution.workeraccount",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True)),
                (
                    "status",
                    models.TextField(
                        choices=[
                            ("PEN", "Pending"),
                            ("ACT", "Active"),
                            ("END", "Ended"),
                            ("TER", "Terminated"),
                            ("REJ", "Rejected"),
                        ],
                        default="PEN",
                    ),
                ),
                (
                    "signed_employer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contracts",
                        to="solution.employeraccount",
                    ),
                ),
                (
                    "signed_workers",
                    models.ManyToManyField(
                        blank=True, related_name="signed_contracts", to="solution.workeraccount"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="workerfeedback",
            constraint=models.UniqueConstraint(fields=("job", "employer"), name="worker_feedback"),
        ),
        migrations.AddConstraint(
            model_name="employerfeedback",
            constraint=models.UniqueConstraint(fields=("job", "worker"), name="employer_feedback"),
        ),
    ]
